# configuration approach followed:
# - whenever possible, prefer pyproject.toml
# - for configurations insufficiently supported by pyproject.toml, use setup.cfg instead
# - setup.py discouraged; minimal stub included only for compatibility with legacy tools

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "bmfm-targets"
description = "Biomedical foundational models for target discovery"
authors = [{ name = "Bharath Dandala", email = "bdand@us.ibm.com" }]
version = "0.14.0"
readme = "README.md"
# due to how PEP 440 defines version matching, prefer [incl, excl) definitions like below:
requires-python = ">=3.10, <3.13"
dependencies = [
  "anndata>=0.10.0",
  "scanpy[louvain]",
  "numpy<2",
  "scipy<1.15.0", #unpin when upstream fixes this https://github.com/scverse/anndata/issues/1811
  "torch",
  "rdata",
  "pytorch-lightning>=2.0.0",
  "transformers>=4.40.0",
  "omegaconf",
  "hydra-core",
  "clearml>1.13,<2",
  "rich",
  "torchmetrics==1.1.0",
  "tensorboardX",
  "pandas>=2,<3",
  "einops",
  "cellxgene_census[experimental]>1.13.0", #experimental required to use built-in iterable dataset
  "tiledbsoma",
  "pysam",
  "litdata @ git+https://github.com/aksgibm/litdata.git@residual_sampling_30",
  "captum",
  "pydantic",
  "scipy",
  "rnanorm",
  "hic-straw",
  "anndata>=0.10.9",
  "focal-loss-torch @ git+https://github.com/mathiaszinnen/focal_loss_torch.git",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
bulk_rna = ["GEOparse", "biopython"]

[project.urls]
repository = "https://github.com/BiomedSciAI/biomed-multi-omic.git"

[project.scripts]
bmfm-targets-scbert = "bmfm_targets.tasks.scbert.scbert_main:main"

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
bmfm_targets = ["py.typed"]
"bmfm_targets.tests.resources.pretrain.panglao" = [
  "metadata/*.csv",
  "metadata/*.txt",
  "rdata/*.RData",
]


[tool.black]
line-length = 88
skip-string-normalization = false
target-version = ['py310']

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"

[tool.ruff]
target-version = "py310"
extend-include = ["*.ipynb"]

# Activate all the rules that are pyupgrade-related
select = [
  "UP",   # pyupgrade
  "D",    # pydocstyle
  "PT",   # pytest style checking
  "C4",   # comprehensions style checking
  "PD",   # pandas style checking
  "F",    # pyflakes: is-literal
  "W605", # pycodestyle: invalid-escape-sequence
  "I",    # isort
]
# On top of the Google convention, disable `D417`, which requires
# documentation for every function parameter.
ignore = [
  "D100",  # pydocstyle: Missing module docstring
  "D101",  # pydocstyle: Missing module-level docstring
  "D102",  # pydocstyle: Missing docstring in public module
  "D103",  # pydocstyle: Missing class docstring
  "D105",  # pydocstyle: Missing docstring in magic method
  "D107",  # pydocstyle: Missing parameter descriptions in the docstring
  "D203",  # pydocstyle: 1 blank line required before class docstring
  "D205",  # pydocstyle: 1 blank line required between summary line and description
  "D212",  # pydocstyle: Multi-line docstring summary should start at the first line
  "D401",  # pydocstyle: First line should be in imperative mood
  "D417",  # pydocstyle: Missing argument descriptions in the docstring
  "F841",  # flake8: unused variable
  "PD011", # pandas do not use .values (false positives causing bugs in torch code)
  "PD015", # Use .merge method instead of pd.merge function. They have equivalent functionality.
  "PT011", #TODO remove
]
[tool.ruff.per-file-ignores]
"__init__.py" = ["I001"]

[tool.coverage.report]

exclude_lines = ["pragma: no cover", "abc.abstractmethod", "@abstract"]

[tool.coverage.run]
omit = [
  "bmfm_targets/tests/*",
  "bmfm_targets/datasets/bulk_rna/bulk_rna_extraction_utils.py",
  "bmfm_targets/datasets/til/*_util.py",
  "bmfm_targets/datasets/scp1884/*_util.py",
  "bmfm_targets/datasets/scibd300k/scIBD300k_util.py",
  "bmfm_targets/datasets/SNPdb/hic_converter.py",
  "bmfm_targets/datasets/bulk_rna/ua_utils.py",
  "bmfm_targets/datasets/SNPdb/tabix_converter.py",
  "bmfm_targets/datasets/scibd/scIBD_util.py",
  "bmfm_targets/tokenization/create.py",
  "bmfm_targets/datasets/cellxgene/cellxgene_calculate_medians.py",
  "bmfm_targets/datasets/bulk_rna/bulk_rna_download.py",
  "bmfm_targets/datasets/*/get_and_process*"
]
